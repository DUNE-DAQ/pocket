#!/usr/bin/bash
# Bash/Zsh independent way of determining the source path
SH_SOURCE=${BASH_SOURCE[0]:-${(%):-%x}}
DKR_BUILD_HERE=$(cd $(dirname ${SH_SOURCE}) && pwd)

SRC_AREA=$DBT_AREA_ROOT
DST_AREA="${DKR_BUILD_HERE}/image"

DKR_NAME=${1}
DKR_BASE_IMG=dunedaq/c8-minimal:latest
set -e
usage () {
    echo "This utility builds docker images containing the necessary code for DAQ applications from your source area \$\{DBT_AREA_ROOT\}=${DBT_AREA_ROOT}"
    echo "./build_docker_image image_name"
}

if [[ $# -ne 1 ]]; then
    echo "ERROR: Wrong number of arguments: 1 expected, $# found."
    usage
    exit 2
fi

if [ "$1" = "-h" ] || [ "$1" = "--help" ]
then
    usage
    exit 0
fi


if [[ ! -d $SRC_AREA && ( -L $SRC_AREA && ! -d "$(readlink $SRC_AREA)" ) ]]; then
    echo "$SRC_AREA is not a directory"
    exit 2
fi

rm -rf ${DST_AREA}

# # Re-create build
mkdir -p ${DST_AREA}

echo "------------------------------------------"
echo "Cloning dbt virtual environment"
echo "------------------------------------------"

DOCKER_OPTS="--user $(id -u):$(id -g) \
    -it \
    -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro \
    -v /cvmfs/dunedaq.opensciencegrid.org:/cvmfs/dunedaq.opensciencegrid.org:ro \
    -v ${HOME}/.spack:${HOME}/.spack \
    -v /cvmfs/dunedaq-development.opensciencegrid.org:/cvmfs/dunedaq-development.opensciencegrid.org:ro"

docker run ${DOCKER_OPTS}\
    -v ${DST_AREA}:/dunedaq/run:z \
    -v ${SRC_AREA}:${SRC_AREA} \
    -v ${DKR_BUILD_HERE}/clone_daq_area.sh:/dunedaq/bin/clone_daq_area.sh \
    ${DKR_BASE_IMG} -- \
    "export PATH=\"/dunedaq/bin/:$PATH\"; clone_daq_area.sh ${SRC_AREA} /dunedaq/run"

echo "------------------------------------------"
echo "Rebuilding workarea '$SRC_AREA' in docker"
echo "------------------------------------------"

docker run ${DOCKER_OPTS}\
    -v ${DST_AREA}:/dunedaq/run:z \
    -v ${DKR_BUILD_HERE}/rebuild_work_area.sh:/dunedaq/bin/rebuild_work_area.sh \
    -v ${DKR_BUILD_HERE}/../common/make_env_script.sh:/dunedaq/bin/make_env_script.sh \
    ${DKR_BASE_IMG} -- \
    "export PATH=\"/dunedaq/bin/:$PATH\"; rebuild_work_area.sh /dunedaq/run"


echo "------------------------------------------"
echo "Building $DKR_NAME:$DKR_TAG docker image"
echo "------------------------------------------"

DKR_TAG=$(bash -c "source ./image/env.sh >/dev/null 2>&1; echo \$DUNE_DAQ_BASE_RELEASE | sed 's/dunedaq-\([^-]*\).*/\1/'")
DKR_BUILD="00"

LAST_TAG=$(docker image ls ${DKR_NAME}:${DKR_TAG} --format '{{json .Tag}}' | sort -r | head -n 1 | tr -d '"')
if [ -n "$LAST_TAG" ]; then
    LAST_SUB_TAG=${LAST_TAG:(-2)}
    echo ${LAST_SUB_TAG##+(0)}
    # NEW_SUB_TAG=$((LAST_SUB_TAG+1))
    printf -v DKR_BUILD "%02d" $((${LAST_ST##+(0)}+1))
fi 


DKR_FULL_TAG=${DKR_NAME}:${DKR_TAG}-${DKR_BUILD}

cp -a $DKR_BUILD_HERE/../common $DKR_BUILD_HERE
docker buildx build --tag ${DKR_FULL_TAG} $DKR_BUILD_HERE

echo "------------------------------------------"
echo "Image ${DKR_FULL_TAG} built!"
echo "------------------------------------------"
