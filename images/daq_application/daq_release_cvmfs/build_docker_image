#!/usr/bin/bash
# Bash/Zsh independent way of determining the source path
SH_SOURCE=${BASH_SOURCE[0]:-${(%):-%x}}
DKR_BUILD_HERE=$(cd $(dirname ${SH_SOURCE}) && pwd)

DUNEDAQ_RELEASE=$1

set -e
usage () {
    echo "This utility builds docker images containing the necessary code for DAQ applications from a release."
    echo "./build_docker_image RELEASE"
    echo "(for example ./build_docker_image v3.0.0)"
}

if [[ $# -ne 1 ]]; then
    echo "ERROR: Wrong number of arguments: 1 expected, $# found."
    usage
    exit 2
fi

if [ "$1" = "-h" ] || [ "$1" = "--help" ]
then
    usage
    exit 0
fi

DKR_TAG=daq-release
DKR_VERSION=${DUNEDAQ_RELEASE}
DKR_BASE_IMG=dunedaq/c8-minimal:latest

DST_AREA="${DKR_BUILD_HERE}/image"

rm -rf ${DST_AREA}
mkdir -p ${DST_AREA}

DOCKER_OPTS="--user $(id -u):$(id -g) \
    -it \
    -v ${HOME}/.spack:${HOME}/.spack \
    -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro \
    -v /cvmfs/dunedaq.opensciencegrid.org:/cvmfs/dunedaq.opensciencegrid.org \
    -v /cvmfs/dunedaq-development.opensciencegrid.org:/cvmfs/dunedaq-development.opensciencegrid.org"

docker run ${DOCKER_OPTS}\
    -v ${DST_AREA}:/dunedaq/run:z \
    -v ${DKR_BUILD_HERE}/../common/make_env_script.sh:/dunedaq/bin/make_env_script.sh \
    -v ${DKR_BUILD_HERE}/capture_release_env.sh:/dunedaq/bin/capture_release_env.sh \
    ${DKR_BASE_IMG} -- \
    "export PATH=\"/dunedaq/bin/:$PATH\"; cd /dunedaq/run; capture_release_env.sh ${DUNEDAQ_RELEASE}"

echo "------------------------------------------"
echo "Bringing common scripts in view of docker build"
echo "------------------------------------------"
cp -a $DKR_BUILD_HERE/../common .

echo "------------------------------------------"
echo "Adding frames.bin"
echo "------------------------------------------"
curl -o ./image/frames.bin -O https://cernbox.cern.ch/index.php/s/0XzhExSIMQJUsp0/download


echo "------------------------------------------"
echo "Building $DKR_TAG:$DKR_VERSION docker image"
echo "------------------------------------------"
docker buildx build --tag $DKR_TAG:$DKR_VERSION $DKR_BUILD_HERE 

echo "------------------------------------------"
echo "Image $DKR_TAG:$DKR_VERSION built!"
echo "------------------------------------------"
